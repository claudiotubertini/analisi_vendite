setwd("~/Dropbox/farma_mining")
library(rvest)
library(stringr)
library(plyr)
library(dplyr)
library(ggvis)
library(knitr)
install.packages("plyr")
install.packages("ggvis")
setwd("~/casperjs/bin")
setwd("~/casperjs")
system("./casperjs sample.js")
system(phantomjs)
system("./casperjs sample.js")
setwd("~/")
system("./casperjs/casperjs sample.js")
system("./casperjs/casperjs caspejs/sample.js")
system("./casperjs/casperjs casperjs/sample.js")
system("echo PATH")
system("echo $PATH")
system2
setwd("~/")
system2(./casperjs/casperjs sample.js)
system(./casperjs/casperjs sample.js)
system("./casperjs/casperjs sample.js")
system("phantomjs sample.js")
system("casperjs sample.js")
system("./casperjs sample.js")
system("./casperjs/casperjs sample.js")
install.packages("phantomjs")
system("phantomjs --version")
system("./phantomjs --version")
system("pahntomjs-2.1.1-linux-x86_64/phantomjs --version")
system("pahntomjs-2.1.1-linux-x86_64/bin/phantomjs --version")
system("./pahntomjs-2.1.1-linux-x86_64/bin/phantomjs --version")
setwd("~/Dropbox/arianna")
source('~/Dropbox/arianna/ricezione_ordini.R')
getwd()
setwd("/home/claudio")
system("casperjs sample.js")
session <- html_session("http://www.smartfarmacia.it/gestione")
form <- html_form(session)[[1]]
vals <- set_values(form, email = "zoccapaolo@tiscali.it", passwd = "smartsito")
require(rvest)
require(httr)
session <- html_session("http://www.smartfarmacia.it/gestione")
form <- html_form(session)[[1]]
vals <- set_values(form, email = "zoccapaolo@tiscali.it", passwd = "smartsito")
session2 = submit_form(session, form, submit = 'submitLogin')
session2 %>% follow_link(xpath = "//*[@id='maintab11']/ul/li[1]/a")
session2 %>% html_nodes(xpath = "//*[@id='maintab11']/ul/li[1]/a") %>% html_attrs("href")
session2 %>% html_nodes(xpath = "//*[@id='maintab11']/ul/li[1]/a")
session2 %>% html_node(xpath = "//*[@id='maintab11']/ul/li[1]/a")
session2 %>% html_nodes("#maintab11 ul li[1] a")
session2 %>% html_nodes("#maintab11 ul li a")
req = GET(session2$response$url)
req %>% html_nodes("#maintab11 ul li a")
read_html(req)
read_html(req) %>% html_nodes("#maintab11 ul li a") %>% html_attrs("href")
read_html(req) %>% html_nodes("#maintab11 ul li a") %>% html_attr("href")
read_html(req) %>% html_nodes("#maintab11 ul li a")
read_html(req) %>% html_nodes("#maintab11")
require(XML)
req2  <-  xpathApply(htmlParse(req), "/html/body/div[2]/div/div[1]/ul/li[3]/ul/li[1]/a", xmlValue)
getwd()
system("casperjs sample.js")
system("casperjs sample.js")
system("casperjs sample.js")
install.packages("knitrBootstrap")
library("knitrBootstrap", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
source('~/Dropbox/farma_mining/zocca_ccred/zocca10.R')
url <- paste0("https://www.viafarmaciaonline.it/", "farmaci-da-banco.html", "?q=%2F", j, "&limit=40")
url
category <- read_html(url)
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
product_count <- gsub(".*?(\\d+).*?(\\d+).*?(\\d+).*","\\3", product_count, perl = TRUE)
page_number <- ceiling(as.numeric(product_count[[1]]) / 40)
library("rvest")
library("dplyr")
category <- read_html(url)
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
product_count <- gsub(".*?(\\d+).*?(\\d+).*?(\\d+).*","\\3", product_count, perl = TRUE)
page_number <- ceiling(as.numeric(product_count[[1]]) / 40)
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
category <- read_html(url)
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
product_count <- gsub(".*?(\\d+).*?(\\d+).*?(\\d+).*","\\3", product_count, perl = TRUE)
page_number <- ceiling(as.numeric(product_count[[1]]) / 40)
category <- read_html(url)
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
library("httr")
library("stringr")
library("httr")
library("XML")
category <- read_html(url)
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
category <- read_html(url)
url <- paste0("http://www.viafarmaciaonline.it/", "farmaci-da-banco.html", "?q=%2F", j, "&limit=40")
category <- read_html(url)
url <- paste0("https://www.viafarmaciaonline.it/", "farmaci-da-banco.html", "?q=%2F", j, "&limit=40")
category <- read_html(url)
set_config( config( ssl_verifypeer = 0L ))
GET(url)
category <- read_html(url)
category = GET(url)
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
category <- content(category, as = "text")
product_count <- category %>%
html_nodes(".pager tbody tr td") %>%
html_text()
category
install.packages("openssl")
category <- read_html(url)
library("magrittr")
url
url = paste0("https://www.viafarmaciaonline.it/", "farmaci-da-banco.html", "?q=%2F", "farmaci-da-banco.html", "&limit=40")
category <- read_html(url)
category = GET(url)
category <- content(category, as = "text")
string <- xpathSApply(category, "/html/body/div[8]/div/div[2]/div/div/div[2]/table[1]/tbody/tr/td[1]", xmlValue, trim = TRUE)
doc <- htmlTreeParse(url)
doc <- htmlTreeParse(url, useInternalNodes = TRUE)
doc <- htmlParse(url, useInternalNodes = TRUE)
category = GET(url)
doc <- htmlParse(category, useInternalNodes = TRUE)
rootdoc = xmlRoot(doc)
string <- xpathSApply(rootdoc, "/html/body/div[8]/div/div[2]/div/div/div[2]/table[1]/tbody/tr/td[1]", xmlValue, trim = TRUE)
string
xpathSApply(rootdoc, "/html/body/div[8]/div/div[2]/div/div/div[2]/table[1]/tbody/tr/td[1]", xmlValue)
read_XML_cache = function(url){
doc <- xmlTreeParse(url, useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
}
read_XML = function(xpath){
rootNode = read_XML_cache(url)
xpathSApply(rootNode, xpath, xmlValue, trim = TRUE)
}
url
rootNode = read_XML_cache(url)
read_XML_cache = function(url){
# doc <- xmlTreeParse(url, useInternal=TRUE)
# rootNode <- xmlRoot(doc)
# rootNode
doc = GET(url)
doc <- htmlParse(doc, useInternalNodes = TRUE)
rootdoc = xmlRoot(doc)
}
rootNode = read_XML_cache(url)
read_XML("/html/body/div[8]/div/div[2]/div/div/div[2]/table[1]/tbody/tr/td[1]")
read_XML("//table[1]/tbody/tr/td[1]")
read_XML = function(xpath, rootNode){
#rootNode = read_XML_cache(url)
xpathSApply(rootNode, xpath, xmlValue, trim = TRUE)
}
read_XML("//table[1]/tbody/tr/td[1]", rootNode)
read_XML("//table[1]/tbody/tr", rootNode)
doc = htmlTreeParse(url, useInternalNodes = TRUE)
xpathSApply(doc, "/html/body/div[8]/div/div[2]/div/div/div[2]/table[1]/tbody/tr/td[1])", xmlValue)
setwd("~/Dropbox/farma_mining")
system("./phantomjs scrape_farmaspees.js")
system("phantomjs scrape_farmaspees.js")
system("phantomjs scrape_farmaspeed.js")
doc = read_html(farmaspeed.html)
library("rvest")
library("dplyr")
library("httr")
library("stringr")
library("httr")
library("XML")
library("magrittr")
doc = read_html(farmaspeed.html)
doc = read_html('farmaspeed.html')
class(doc)
url = "https://www.farmaspeed.it/cat/dermatologici/4564"
category <- read_html(url)
product_count <- category %>%
html_nodes("small") %>%
html_text()
product_count <- str_trim(gsub(".*?(\\d+).*?(\\d+).*?(\\d+).*","\\3", product_count[1], perl = TRUE))
product_count <- category %>%
html_nodes("small") %>%
html_text()
product_count = if (grepl(".*?(\\d+).*?(\\d+).*?(\\d+).*", product_count)) product_count else gsub("(\\d+).*","\\1", product_count[1], perl = TRUE)
product_count <- str_trim(gsub(".*?(\\d+).*","\\1", product_count[1], perl = TRUE))
farmapage <- tryCatch(read_html(paste0(url, "?display=&limit=&order=&pag=", 0)),
warning = function(w){
warning(w)
}, error = function(e){
"NA"
}, finally = {"NA"})
mylist <- tryCatch(farmapage %>% html_nodes(xpath = "//a[@itemprop='url]") %>% html_attr("href"), error = function(e){"NA"}, finally = {"NA"})
mylist <- tryCatch(farmapage %>% html_nodes(xpath = "//a[@itemprop='url']") %>% html_attr("href"), error = function(e){"NA"}, finally = {"NA"})
single_page <- tryCatch(read_html(paste0(url, mylist[[1]])),
warning = function(w){
warning(w)
}, error = function(e){
"NA"
}, finally = {"NA"})
paste0(url, mylist[[1]])
read_html(paste0("https://www.farmaspeed.it/", mylist[[1]]))
single_page <- tryCatch(read_html(paste0("https://www.farmaspeed.it/", mylist[[1]])),
warning = function(w){
warning(w)
}, error = function(e){
"NA"
}, finally = {"NA"})
title <- tryCatch(single_page %>% html_nodes("h2.product-title a") %>% html_attr("title") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
description <- tryCatch(single_page %>% html_nodes("div.tab-body") %>% html_text() , error = function(e){"Non disponibile"}, finally = {"Non disponibile"})
description
html2 = GET(paste0("https://www.farmaspeed.it/", mylist[[1]]))
parsedhtml= htmlParse(html2)
description_html <- xpathSApply(parsedhtml, "//div[@itemprop='description']")
description_html
description = paste(as.list(capture.output(description_html)[-1]), collapse = "")
single_page %>% html_node(xpath = "//div[@class='product-short-info']/p[position()=2]") %>% html_text()
minsan <- tryCatch(str_extract(single_page %>% html_node(xpath = "//div[@class='product-short-info']/p[position()=2]") %>% html_text(), "\\d+"), error = function(e){"NA"}, finally = {"NA"})
price_listino <- tryCatch(single_page %>% html_node("span.'price discount'") %>%
html_text() %>% str_extract("\\d+,\\d+") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
price_listino <- tryCatch(single_page %>% html_node("span.price .discount") %>%
html_text() %>% str_extract("\\d+,\\d+") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
price_listino <- tryCatch(single_page %>% html_node("span.price.discount") %>%
html_text() %>% str_extract("\\d+,\\d+") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
price_scontato <- tryCatch(single_page %>%
html_node("span.price") %>%
html_text() %>% str_extract("(\\d+,\\d+)") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
price_listino <- tryCatch(single_page %>% html_node("div.product-price span.price.discount span.price") %>%
html_text() %>% str_extract("\\d+,\\d+") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
price_listino <- tryCatch(single_page %>% html_node("span.price span.discount") %>%
html_text() %>% str_extract("\\d+,\\d+") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
price_listino <- tryCatch(single_page %>% html_node("span.price.discount") %>%
html_text() %>% str_extract("\\d+,\\d+") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
single_page %>% html_node("div.product-price span.price.discount") %>%
html_text()
single_page %>% html_node(xpath = "//div[@class='product-price']/span[position()=1]") %>%
html_text()
mylist[[1]]
price_scontato <- tryCatch(single_page %>%
html_node(xpath = "//div[@class='product-price']/span[@itemprop='price']") %>%
html_text() %>% str_extract("(\\d+,\\d+)") %>% str_replace(",", "."), error = function(e){"NA"}, finally = {"NA"})
image_url <- tryCatch(single_page %>% html_node("a.theater img") %>% html_attr("src"), error = function(e){"NA"}, finally = {"NA"})
image_url
image_name <- tryCatch(paste0(minsan,"_", tail(strsplit(image_url, "/")[[1]], n=1)), error = function(e){"NA.jpg"}, finally = {"NA.jpg"})
setwd("~/Dropbox/farma_mining/farmaspeed_test")
source('~/Dropbox/farma_mining/farmaspeed_test/farmaspeed_parziale.R')
setwd("/media/claudio/DATA/analisi_vendite")
load("/media/claudio/DATA/analisi_vendite/.RData")
knit_with_parameters('/media/claudio/DATA/analisi_vendite/vendite_CLUEB.Rmd')
install.packages("xtable")
library(gdata)
library(scales)
library(ggplot2)
library(tidyr)
library(dplyr)
library(forecast)
library(xtable)
df = read.xls ("fatture_20160525.xls", sheet = 1, header = TRUE)
df2 = separate(data = df, col = Cliente_forn, into = c("cliente", "codice"), sep = "\\-")
df2$data = paste("2016", df2$Mese, df2$Giorno, sep = "/")
df2$data <- as.Date(df2$data, "%Y/%m/%d")
print(xtable(df))
dt <- select(df2, cliente, data, Contributo, Valore_fatturato)
str(data)
str(dt)
colSums(df_librerie$Valore_fatturato)
sum(df_librerie$Valore_fatturato)
cbind("Totale fatturato Librerie", sum(df_librerie$Valore_fatturato))
View(df_contributi)
View(df_librerie)
View(df)
str(df)
View(df2)
View(df2)
df2_per_mese = group_by(df2, Mese)
df2_per_mese = group_by(df2, Mese)
fatturato_mensile = summarise(df2_per_mese, fatturato = sum(Valore_fatturato), count = n())
ggplot(data = fatturato_mensile, aes(Mese, Valore_fatturato))
View(fatturato_mensile)
ggplot(data = fatturato_mensile, aes(Mese, fatturato))
View(df2)
ggplot(df2, aes(x=Mese, y=Valore_fatturato, fill=factor(Contributo)), color=factor(Contributo)) +
stat_summary(fun.y=sum, position="stack", geom="bar")
ggplot(df2, aes(x=Mese, y=Valore_fatturato, fill=Contributo), color=Contributo) +
stat_summary(fun.y=sum, position="stack", geom="bar")
